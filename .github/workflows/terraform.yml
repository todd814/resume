name: 'Terraform Plan & Test'
on:
  pull:
    branches: [ main ]
    
defaults:
      run:
        shell: bash

env:
  tf_actions_working_dir: ./terraform
  

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest


    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
         
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ./terraform
        continue-on-error: true

      - name: Init
        id: init
        run:
          terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: true
        
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })



